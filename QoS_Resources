https://youtu.be/Ttd4y3R6J24
https://packetlife.net/media/library/19/QoS.pdf
https://www.ciscolive.com/c/dam/r/ciscolive/us/docs/2019/pdf/BRKCRS-2501.pdf

Questions I still have?
Do you count layer 2 headers? Your just counting math and bits so I would assume every bit no free bits!


https://learningnetwork.cisco.com/s/question/0D53i00000Ksv0MCAR/token-bucket-cir-theory
You can't actually change line speed you can alter the time sample and the quantity to max line speed if you wish. 
So, if you wanted to but the bandwidth in half. You would use 8 TCs and they would fill and have airtime in second half of the 128ms. 
Given the scenario explained below from Scott about 64k on 128k line
(TC1 fill 1/2 data, second half air time), (TC2 fill 1/2 data, second half air time), (TCN fill 1/2 data, second half air time), (TC8 fill 1/2 data, second half air time)
TC = time Cycle
BC = Burst Cycle
Be = Excess Burst per Tc
Be Max = Burst to port speed
Maximums for 128k circuit:
If our Tc (Time per Cycle) was 1 second, then our burst per cycle (Bc) would be 128000 bits.
Defaults:
Default TC = 1/8 second or 128 ms. Given this maximum based on default time is 8k bits per second. 

Incase this one disappears I want to have it to read later swmorris chopped up for quicker consumption:
You have a physical line speed of 128K, or 128,000 bits per second.
If you need to send more, you'll have to go to accounting.  They will laugh at you. So we need to relegate and prioritize and shape traffic now...
In order to think about these things we need a time interval to work the math with.  If our Tc (Time per Cycle) was 1 second, then our burst per cycle (Bc) would be 128000 bits.
but that would be silly.  So we'll look at smaller intervals.
The default Tc is 125ms  (1/8 of a second).   So now, still looking at our line speed.
What is the MAXIMUM number of bits per Tc we can send without having output drops?   (hint:  divide by 8)
Yup.  16,000 bits per Tc.  16,000 * 8 Tc's = 128,000 bits per second!  Yay.   So that stuff we just did is the LAW.
CIR is a theorhetical target.  In other words, what do you WANT to do?
See if the result is what you want, and if not, tweak it.  After a while, of course, you'll get better at your first guess.  It's still a guess.  We just call that 'experience'.
So, for 'x' type of traffic, let's say I WANT to send data at 64000 bits per second.  So my CIR = 64K (64000).  N
ow, how many bits do I have to send per Tc in order to achieve that (again, divide by 8).  So Bc = 8000 bits per Tc.
Now, the hard part.  Remember the 16,000 total bits/Tc available?   I just allocated 8000 of them.  I still have 8000 left.  I can set those as Be (excess burst per Tc) or I can leave it alone.
Setting Be to 8000 would be called "burst to port speed".   but let's not do that
Let's say I have another type of traffic...  CIR = 32000 bps.  What's the Bc?   Yup, 4000 bits per Tc.  So now between two CIRs I have allocated 12,000 of my 16,000 total bits per Tc. 
I can balance Be between the two, or do 4k and 0k, 3 and 1, 1 and 3 or whatever I feel like....
But when I add everything up, we can't break the law!  Or bad things may happen!
But it's all about the math. 
HTH,
